# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule Voxbone.Model.Did do
  @moduledoc """

  """

  @derive [Poison.Encoder]
  defstruct [
    :didId,
    :e164,
    :type,
    :countryCodeA3,
    :cityName,
    :areaCode,
    :voiceUriId,
    :faxUriId,
    :smsLinkGroupId,
    :orderReference,
    :channels,
    :delivery,
    :trunkId,
    :capacityGroupId,
    :didGroupId,
    :regulationAddressId,
    :srvLookup,
    :callerId,
    :cliPrivacy,
    :otherOptions,
    :ringback,
    :dnisEnabled,
    :blockOrdinary,
    :blockCellular,
    :blockPayphone,
    :smsOutbound,
    :webRtc,
    :voxoutNational,
    :voxoutInternationalEnabled
  ]

  @type t :: %__MODULE__{
          :didId => integer(),
          :e164 => String.t(),
          :type => String.t(),
          :countryCodeA3 => String.t(),
          :cityName => String.t(),
          :areaCode => String.t(),
          :voiceUriId => integer(),
          :faxUriId => integer(),
          :smsLinkGroupId => integer(),
          :orderReference => String.t(),
          :channels => integer(),
          :delivery => String.t(),
          :trunkId => integer(),
          :capacityGroupId => integer(),
          :didGroupId => integer(),
          :regulationAddressId => integer(),
          :srvLookup => boolean(),
          :callerId => CallerId,
          :cliPrivacy => String.t(),
          :otherOptions => Peer,
          :ringback => String.t(),
          :dnisEnabled => String.t(),
          :blockOrdinary => boolean(),
          :blockCellular => boolean(),
          :blockPayphone => boolean(),
          :smsOutbound => boolean(),
          :webRtc => boolean(),
          :voxoutNational => String.t(),
          :voxoutInternationalEnabled => boolean()
        }
end

defimpl Poison.Decoder, for: Voxbone.Model.Did do
  import Voxbone.Deserializer

  def decode(value, options) do
    value
    |> deserialize(:callerId, :struct, Voxbone.Model.CallerId, options)
    |> deserialize(:otherOptions, :struct, Voxbone.Model.Peer, options)
  end
end
